require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

platform :ios, '12.0'  # Set minimum iOS version to 12.0
prepare_react_native_project!

# This is needed to run post-install
post_install do |installer|
  # Fix for iOS deployment target warnings
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Set iOS deployment target for all pods
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'

      # This is needed to silence warnings about private API usage
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end

      # Ensure all targets use the same DEFINES_MODULE setting
      if config.build_settings['DEFINES_MODULE'].nil?
        config.build_settings['DEFINES_MODULE'] = 'YES'
      end

      # Fix for the deprecated syscall issues
      if ['glog', 'RCT-Folly'].include?(target.name)
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_NO_CONFIG'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_MOBILE=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_USE_LIBCPP=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_HAVE_SYSCALL=0'
      end
    end
  end

  # Add output paths to script phases
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_phases.each do |build_phase|
        if build_phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
          build_phase.output_paths ||= []

          # Add output path if it's empty
          if build_phase.output_paths.empty?
            phase_name = build_phase.name || "ShellScript"
            safe_name = phase_name.gsub(/[^a-zA-Z0-9]/, "_")
            build_phase.output_paths << "${DERIVED_FILE_DIR}/#{safe_name}_output.txt"
          end
        end
      end
    end
  end
end

target 'WRKT' do
  use_expo_modules!
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default
    :hermes_enabled => true
  )

  # Fix for the problematic dependencies
  pod 'glog', :modular_headers => true
  pod 'RCT-Folly', :modular_headers => true

  # Uncomment to opt-in to using Flipper
  # use_flipper!()
end